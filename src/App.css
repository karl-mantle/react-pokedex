@font-face {
    font-family: 'Pixel Operator';
    src: url('./fonts/PixelOperatorMono.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
  }
  
@font-face {
    font-family: 'Pixel Operator';
    src: url('./fonts/PixelOperatorMono-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
}

:root {
    /* colours here for easy tweaking later... */
    --red-1: red;
    --red-2: firebrick;

    --blue-1: lightcyan;
    --blue-2: lightblue;

    --yellow-1: yellow;
    --yellow-2: gold;

    --green-1: lightgreen;
    --green-2: green;


    --border: teal;
    --text: teal;
    --text-dark: var(--blue-1);

    --max-width: 800px;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    background-color: #1c1c1c;
}

h1, h2, h3, a, p, span, button, input, th, td, li {
    font-family: 'Pixel Operator', sans-serif;
    font-size: 1.25rem;
    color: var(--text);
}

ul {
    list-style-type: none;
}

th {
    font-weight: bold;
}

main {
    margin: 0 1rem;
}

main::after {
    content: '';
    max-width: var(--max-width);

    background-image: linear-gradient(rgba(165, 165, 165, 0.4), transparent 4px, var(--blue-2));
    background-size: 4px 4px;
    pointer-events: none;

    position: fixed;
    margin: 0 auto;
    z-index: 20;

    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

.container {
    max-width: var(--max-width);
    margin: 0 auto;

    background: linear-gradient(0deg, var(--blue-1) 40%, var(--blue-2) 80%);
    background-attachment: fixed;

    border-right: rgba(0, 0, 0, 0.5) solid 2px;
    border-left: rgba(0, 0, 0, 0.5) solid 2px;
}

/* footer styles */

.footer-container {
    position: sticky;
    bottom: 0;
    z-index: 25;
    
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.5));
}

footer {
    background: linear-gradient(var(--red-1), var(--red-2));

    display: flex;
    justify-content: start;

    min-height: 100px;
    padding-top: .5rem;

    clip-path: polygon(100% 100%, 0 100%, 0 25%, 30% 25%, 35% 0, 100% 0);
}

/* header styles */

.header-container {
    position: sticky;
    top: 0;
    z-index: 25;
    
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.5));
}

header {
    background: linear-gradient(var(--red-1), var(--red-2));

    display: flex;
    justify-content: start;

    min-height: 100px;
    padding-top: .5rem;

    clip-path: polygon(0 0, 100% 0, 100% 75%, 30% 75%, 25% 100%, 0 100%);
}

.header-content {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: space-between;
}

.header-title {
    display: flex;
    justify-content: center;
    align-items: center;

    h1 {
        font-size: 1.25rem;
        text-align: center;
        color: var(--text-dark);
    }
}

.main-light {
    background: radial-gradient(rgba(105, 105, 105, 0.85) 40%, rgba(0, 0, 0, 0.6) 90%);
    box-shadow:rgba(0, 0, 0, 0.2) 0 -4px 16px 6px, inset rgba(0, 0, 0, 0.6) 0 -4px 24px, rgba(255, 255, 255, 0.5) 0 4px 16px;

    border: 6px solid #fff;
    border-radius: 50%;
    
    flex-shrink: 0;

    width: 5rem;
    height: 5rem;

    margin: 0 .75rem .5rem;
}

.main-light.on {
    background: linear-gradient(var(--blue-1), var(--blue-2));
    box-shadow: inset rgb(120 200 255 / 50%) -4px -8px 8px 10px, rgb(20 80 255 / 50%) 0 0 20px 4px;

}

.lights {
    display: flex;
    justify-content: space-between;
}

.loading-lights {
    display: flex;
}

.light {
    background: radial-gradient(rgba(105, 105, 105, 0.85) 40%, rgba(100, 100, 100, 0.6) 80%);
    box-shadow:rgba(0, 0, 0, 0.2) 0 -2px 8px 3px, inset rgba(0, 0, 0, 0.6) 0 -2px 12px, rgba(255, 255, 255, 0.5) 0 4px 12px;

    border-radius: 50%;

    width: 1.5rem;
    height: 1.5rem;

    margin: 0 .25rem;
}

.light.red {
    animation: blink-red 4s infinite;
}

.light.yel {
    animation: blink-yel 2s infinite;
}

.light.grn {
    animation: blink-grn 3s infinite;
}

@keyframes blink-red {
    0%, 49% { background: linear-gradient(var(--red-1), var(--red-2)); }
    50%, 100% { background: radial-gradient(rgba(105, 105, 105, 0.85) 40%, rgba(100, 100, 100, 0.6) 80%); }
}

@keyframes blink-yel {
    0%, 49% { background: linear-gradient(var(--yellow-1), var(--yellow-2)); }
    50%, 100% { background: radial-gradient(rgba(105, 105, 105, 0.85) 40%, rgba(100, 100, 100, 0.6) 80%); }
}

@keyframes blink-grn {
    0%, 74% { background: radial-gradient(rgba(105, 105, 105, 0.85) 40%, rgba(100, 100, 100, 0.6) 80%); }
    75%, 100% { background: linear-gradient(var(--green-1), var(--green-2)); }

}

/* search styles */

.search {
    display: flex;
    flex-direction: column-reverse;
}

.search form {
    display: flex;
    justify-content: space-evenly;
    
    padding: 1rem 0;
}

.error {
    background-color: var(--border);
    border-radius: 1rem;

    padding: 1rem;
    margin-bottom: 1rem;

    p {
        color: var(--text-dark);
        font-size: .75rem;
        text-align: center;
    }
}

button, input[type=text] {
	background: transparent;
	border: .25rem solid var(--border);
	border-radius: 1rem;

    box-shadow:rgba(0, 0, 0, 0.2) 0 0 2px 2px;

	padding: .5rem;
    margin: 0 1rem;

	color: var(--text);
    font-weight: bold;
}

button {
    min-width: 25%;
}

input[type=text] {
    width: 100%;
}

/* pokedex styles */

.pagination {
    display: flex;
    justify-content: space-between;

    padding-bottom: 1rem;
}

.end {
    margin-left: auto;
}

.pokedex {
    display: flex;
    flex-direction: column;
}

/* card styles */

.card {
	background: transparent;
	border: .25rem solid var(--border);
	border-radius: 1rem;

    box-shadow:rgba(0, 0, 0, 0.2) 0 0 2px 2px;

    margin: 0 0 1rem;
}

.card-details {
    display: grid;
    grid-template-columns: 2rem repeat(2, 1fr);
    justify-items: center;
    align-items: center;
    gap: .5rem;

    padding: 0 .5rem;
}

.pkmn-id {
    background-color: var(--border);
    border-radius: .75rem;

    padding: .25rem;
    justify-self: start;
}

.pkmn-id span {
    background-color: var(--blue-1);
    border-radius: 50%;

    display: block;
    padding: .25rem;
    margin: .25rem;
    
    color: var(--text);
    font-weight: bold;
}

/* pokedex entry styles */

.entry-container {
    position: fixed;
    max-width: calc(var(--max-width) - 2rem);
    margin: 7rem 1rem;
    z-index: 15;

    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    box-shadow:rgba(0, 0, 0, 0.2) 0 0 5px 2px;
    border-radius: 1rem;

    display: flex;
    align-items: center;
    justify-content: center;

    /* add auto margin for desktop */
}

.entry {
    background: linear-gradient(0deg, var(--blue-1) 40%, var(--blue-2) 80%);
	border: .5rem solid var(--border);
	border-radius: 1rem;

    padding: 1.25rem;
    height: 100%;

    overflow-y: auto;

    display: flex;
    flex-direction: column;
    justify-content: center;
}

.close:hover {
    text-decoration: underline;
}

.entry-top-row {
    display: flex;
    justify-content: space-between;
    align-items: center;

    margin-bottom: 1rem;

    h2 {
        font-size: 1.5rem;
    }
}

.entry-factfile {
    display: flex;
    justify-content: space-around;

    margin-bottom: 1.5rem;
}

.entry-facts {
    display: flex;
    flex-direction: column;

    padding: .5rem;
}

.entry-description {
    background-color: var(--border);
    border-radius: 1rem;

    padding: 1rem;
    margin-bottom: 1.5rem;

    p {
        color: var(--text-dark);
    }
}

.entry-table {
    align-self: center;
}

.entry-loading {
    display: flex;
    justify-content: center;
    align-items: center;

    overflow: hidden;
}

.pokeball {
    height: 50vh;
    animation: rotate 1s infinite;
}

@keyframes rotate {
    0%, 24% { transform: rotate(45deg); }
    25%, 49% { transform: rotate(90deg); }
    50%, 74% { transform: rotate(135deg); }
    75%, 100% { transform: rotate(180deg); }

}

/* keep at end, ta */

.hidden {
    display: none;
}